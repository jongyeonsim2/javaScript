1. 콜백 함수 활용 함수
   1.1 setInterval()
       일정 시간마다 반복
       timer1.html, timer1.js

   1.2 clearInterval()
       반복 실행 멈추기
        timer2.html, timer2.js

   1.3 setTimeOut()
       일정 시간 후에 실행
       timer3.html, timer3.js


2. DOM( Document Object Model )
  - 자바스크립트와 같은 프로그래밍 언어로 웹 문서에 접근하고 제어할 수 
    있도록 웹 문서를 체계적으로 정리하는 방법.
  - DOM 에서는 웹 문서를 하나의 객체로 정의하고, 웹 문서를 이루는 
    모든 요소를 각각의 객체로 정의.
  - DOM tree, 160페이지, 그림 5-1
    document - html - head and body - ....
  - document node
    - DOM tree 의 최상위 루트 노드임.
    - Html 문서당 document 객체는 유일함.
    - DOM 트리의 node 들에 접근하기 위한 진입점 역할.
    - 전역객체 window 의 document property 에 바인딩이 되어 있음

  2.1 웹 요소에 접근
    2.1.1 querySelector() , 하나의 요소가 대상
    2.1.2 querySelectorAll() , 여러 요소가 대상
    2.1.3 getElement* 함수 , 선택자를 사용한 대상
      - getElementById, 하나의 요소가 대상
      - getElementsByClassName, 여러 요소가 대상
      - getElementsByTagName, 여러 요소가 대상
    2.1.4 내용 가져오기
      - innerText : 화면에 보이는 요소의 내용을 가져옴.
      - innerHTML : 선택된 요소의 태그와 내용을 가져옴.
      - textContent : 선택된 요소의 내용을 가져옴.
    2.1.5 내용 수정하기
      - js-content-2.html, js-content-2.js
    2.1.6 스타일 수정하기
      - js-css.html, js-css.js
    2.1.7 스타일 추가 및 삭제
      - classlist-1.html, classlist-1.js
    2.1.8 적용된 스타일을 확인 후 추가 및 삭제
      - classList.contains()
      - classlist-2.html, classlist-2.js
      - classList.toggle() 를 사용하면 편리.
    2.1.9 폼 다루기


3. 이벤트와 이벤트 처리기
  - 이벤트란 웹브라우저나 사용자가 실행하는 어떤 동작임.
  - 자바 스크립트 이벤트는 주로 마우스나 키보드를 사용할 때,
    웹 문서를 불러올 때, 폼에 입력을 할 때 발생.
  - 문서 로딩 이벤트
    웹 문서를 가져올 때, 스크롤 이동 등
  - 마우스 이벤트
    마우스 버튼, 휠 이동
  - 키보드 이벤트
    키를 조작
  - 폼 이벤트
    폼 요소에 입력시 발생하는 다양한 이벤트

  3.1 이벤트 처리하기
    - HTML 태그에 함수 연결
    - HTML 요소에 함수 연결
    - 이벤트 리스너로 처리

  3.2 이벤트 객체
    DOM 에는 웹 문서에서 발생한 이벤트를 저장하는 event 객체가 있음.
    event 가 발생하면 이벤트와 관련된 객체가 자동으로 만들어짐.

  3.3 이벤트 전파
    - 이벤트 버블링( 이벤트 전달 방향 : 자식 -> 부모 )
      특정 요소에서 이벤트가 발생했을 경우, 그 이벤트가 해당 요소뿐만
      아니라, 그 요소의 부모 요소에도 똑같이 발생한것으로 간주하는 것.

      e.target.tagName : 현재 이벤트가 발생한 요소
      e.currentTarget.tagName : 발생한 이벤트를 현재 처리한 요소

    - 이벤트 캡처링( 이벤트 전달 방향 : 부모 -> 자식 )
      이벤트가 발생하면 최상위 요소에서 시작해서 이벤트가 발생한 요소까지
      차례대로 이벤트가 전파되는 방식.









