1. DOM 트리 및 Node List
   1.1 DOM 트리 구성 기준
     - 모든 HTML 태그는 DOM 트리의 요소 노드가 됨.
     - HTML 태그에서 사용하는 텍스트 컨텐츠는 
       자식 노드인 Text 노드가 됨.
     - HTML 태그의 속성은 자식 노드인 
       속성 노드가 됨.
       ex. img tag를 추가 ( 그림 7-13 참고 )
           - img tag를 요소 노드로 신규 생성.
             let newImg = document.createrElement("img")
           - img tag 의 src 속성을 설정하기 위한
             속성 노드를 신규 생성.
             let srcNode = document.createAttribute("src") 
             srcNode.value = "images/wall.jpg"
           - img tag 요소 노드와 
             img tag 의 src 속성 노드를 연결
              newImg.setAttributeNode(srcNode)
           ========== img tag node 구성 완료 ==========
           - 현재 html 문서에서 img tag 와 연결될 부모노드에
             연결. => 완성된 html 문서가 됨.
             document.body.appendChild(newImg)
           ========== html 구성 완료 ==========

   1.2 노드 리스트(Node List)
     - querySelectorAll() 함수를 사용한 경우 반환되는 정보.
     - 노드를 추가 및 삭제는 Node List 를 기준으로 함.

   1.3 제공되는 함수(API)
     - createElement()
     - appendChild()
     - createTextNode()
     - createAttribute()
     - setAttributeNode()
     - insertBefore()
     - remove()
     - removeChild()
     - parentNode
     - this
       화살표 함수내에서 this 를 사용하면 안됨.
       익명함수 형태로 콜백 함수를 작성해서 사용.


2. 내장 객체
  자바 스크립트에 미리 객체로 정의되어 있는 API.
  개발자가 쉽게 사용할 수 있도록 미리 만들어진 객체.

  2.1 window 객체
    - 웹 브라우저의 내장 객체 중에서 모든 객체의 최상위 객체임.
    - HTML의 웹(웹 브라우저) API 관련
    - 웹 브라우저와 관련이 없는 API
    - 웹 브라우저에서 웹 페이지를 열면, 가장 먼저 window 객체가 생성.

  2.2 location 객체
    - location.href 와 차이점
      타입은 속성.
      웹 브라우저에서 이동한 이력이 저장됨.( history.back() 가능, 뒤로 가기 버튼 사용 가능 )
      대부분의 URL 이동에서 사용됨.
    - location.replace()
      타입은 함수.
      웹 브라우저에서 이동한 이력은 저장되지 않음.( history.back() 안됨. 뒤로 가기 버튼 안됨. )
      이력이 필요 없는 경우, 이력을 남기면 안되는 경우에 사용.( 뒤로가기 차단, 보안상을 위해서 )
      